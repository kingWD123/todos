name: Pipeline de Build & Déploiement

permissions:
  contents: write

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      MY_ENV_VAR: value

    steps:
      - uses: actions/checkout@v3
        with:
          token: '${{ github.token }}'

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # build Maven pour générer les artefacts nécessaires à DependencyCheck
      - name: Build dependency-check CLI
        run: mvn package

      # test unitaire
      - name: Build and run tests with Maven
        run: mvn -B clean verify

      # Sonar cloud
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar


      # lecture de la version
      - name: Release
        id: read_version
        run: |
          CURRENT_VERSION=$(cat version.txt)
          echo "Current version: $CURRENT_VERSION"
          echo "CURRENT_VERSION=$CURRENT_VERSION" >> $GITHUB_ENV

      # incrementation de la version
      - name: Bump version
        id: bump_version
        run: |
          IFS='.' read -r MAJOR MINOR <<< "$CURRENT_VERSION"
          MINOR=$((MINOR + 1))
          NEW_VERSION="${MAJOR}.${MINOR}"
          echo "New version: $NEW_VERSION"
          echo "$NEW_VERSION" > version.txt
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

      # commit du fichier version.txt
      - name: commit du fichier version.txt
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add version.txt
          git commit -m "chore: bump version to ${{ env.NEW_VERSION }}" || echo "No changes to commit"
          git push

      # creation du tag git
      - name: Creation du tag Git
        run: |
          git tag "v${{ env.NEW_VERSION }}"
          git push origin "v${{ env.NEW_VERSION }}"

      # build and push docker image
      - name: Build & push Docker image
        uses: mr-smithers-excellent/docker-build-push@v6
        with:
          image: bakugo221/todos_project
          tags: ${{ env.NEW_VERSION }},latest
          registry: docker.io
          enableBuildKit: true
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}